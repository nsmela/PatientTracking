@switch (Editing) {
    <!-- View Only: cannot change anything -->
    default:
        <MudPaper MaxHeight="22px" Class="mx-n1 pl-1 d-flex flex-grow-1 justify-space-between">
            <MudText Class="d-inline-flex flex-grow-1 " Typo="Typo.body2" Style="height:18px">@TaskItem.Label </MudText>
            <MudText Class="mr-1 d-inline-flex" Style="height:18px;">@TaskItem.Value.ToString("0.00")</MudText>
        </MudPaper>
        break;
    <!-- Data Entry Only: can change the value only -->
    case EditMode.DataEntry:
        <MudNumericField T="double"
                 HideSpinButtons="true"
                 Label="@TaskItem.Label"
                 Variant="Variant.Outlined"
                 Margin="Margin.Dense"
                 ValueChanged="() => OnValueChanged()"
                 Value="@TaskItem.Value" />
        break;
}
<!-- Edit: can edit value and settings -->
<!-- Maybe use a generic component? -->
@code {
    [Parameter] public PatientTaskNumber TaskItem { get; set; }
    [Parameter] public EditMode Editing { get; set; }
    [Parameter] public EventCallback<PatientTaskNumber> GroupChanged { get; set; }

    async Task OnValueChanged() {
        await GroupChanged.InvokeAsync(TaskItem);
    }
}
