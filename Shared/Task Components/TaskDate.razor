<MudToolBar>
    @switch (Editing) {
        <!-- List View: cannot change anything -->
        default:
            <MudPaper MaxHeight="22px" Class="mx-n7 pl-1 d-flex flex-grow-1 justify-space-between">
                <MudText Class="d-inline-flex flex-grow-1 " Typo="Typo.body2" Style="height:18px"><b>@TaskItem.Label</b></MudText>
                <MudText Class="mr-1 d-inline-flex" Style="height:18px;" Typo="Typo.body2">@TaskItem.Date.ToShortDateString()</MudText>
            </MudPaper>
            break;
        <!-- Data Entry Only: can change the value only -->
        case EditMode.DataEntry:
            <MudDatePicker T="DateTime"
                   Label="@TaskItem.Label"
                   Variant="Variant.Outlined"
                   Margin="Margin.Dense"
                   DateChanged="(value) => OnValueChanged(value)"
                   Date="@TaskItem.Date" />
            break;
    }
    <!-- Edit: can edit value and settings -->
    <!-- Maybe use a generic component? -->
</MudToolBar>

@code {
    [Parameter] public PatientTaskDate TaskItem { get; set; }
    [Parameter] public EditMode Editing { get; set; }
    [Parameter] public EventCallback<PatientTaskDate> GroupChanged { get; set; }

    async Task OnValueChanged(DateTime? value) {
        if (value is null) return;
        TaskItem.Date = value.Value;
        await GroupChanged.InvokeAsync(TaskItem);
    }
}