<MudToolBar>
    @switch (Editing) {
        <!-- List View: cannot change anything -->
        default:
            <MudPaper Class="mud-theme-secondary d-flex flex-nowrap align-content-end flex-grow-1 mt-1" Outlined="true">
                <MudText class="mx-2 pt-1 d-inline-flex flex-grow-1">Task Name</MudText>
                <MudPaper Class="mud-theme-secondary d-inline-flex mt-1 px-2" Height="18px" Square="true" Elevation="0"> 
                    <MudCheckBox @bind-Checked="TaskItem.Checked" Class="d-inline-flex mt-n3 mr-n4" Size="Size.Small" />
                </MudPaper>
            </MudPaper>
            break;
        <!-- Data Entry Only: can change the value only -->
        case EditMode.DataEntry:
            <MudCheckBox T="bool" CheckedChanged="@OnValueChanged"
                 Variant="Variant.Text"
                 Label="@TaskItem.Label" LabelPosition="LabelPosition.Start"
                 Dense="true" Size="Size.Small" />
            break;
    }
    <!-- Edit: can edit value and settings -->
    <!-- Maybe use a generic component? -->
</MudToolBar>

@code {
    [Parameter] public PatientTaskBool TaskItem { get; set; }
    [Parameter] public EditMode Editing { get; set; }
    [Parameter] public EventCallback<PatientTaskBool> GroupChanged { get; set; }

    async Task OnValueChanged(bool value) {
        TaskItem.Checked = value;
        await GroupChanged.InvokeAsync(TaskItem);
    }
}