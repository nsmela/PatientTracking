<MudToolBar>
    @switch (Editing) {
        <!-- List View: cannot change anything -->
        default:
        <MudCard>
                <MudText Class="d-inline-flex flex-grow-1" Typo="Typo.body2" Style="height:18px"><b>@TaskItem.Label</b></MudText>
                <MudCheckBox Class="mt-n4 mr-n2 d-inline-flex" Checked="@TaskItem.Checked" 
                    ReadOnly="true" LabelPosition="LabelPosition.Start" T="bool" Style="height:18px;" />
        </MudCard>
            break;
        <!-- Data Entry Only: can change the value only -->
        case EditMode.DataEntry:
            <MudCheckBox Checked="@TaskItem.Checked" T="bool"
                LabelPosition="LabelPosition.Start" Label="@TaskItem.Label"
                CheckedChanged="(value) => OnValueChanged(value)" />
            break;
        case EditMode.Modify:
            break;
    }
    <!-- Edit: can edit value and settings -->
    <!-- Maybe use a generic component? -->
</MudToolBar>

@code {
    [Parameter] public PatientTaskBool TaskItem { get; set; }
    [Parameter] public EditMode Editing { get; set; }
    [Parameter] public EventCallback<PatientTaskBool> TaskChanged { get; set; }

    async Task OnValueChanged(bool value) {
        TaskItem.SetValue(value);
        await TaskChanged.InvokeAsync(TaskItem);
    }
}