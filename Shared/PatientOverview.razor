@inject PatientService patientService
@inject NavigationManager navigationManager

@if(Patient == null){
    <p><em>Loading patient...</em></p>
} 
else{
    <MudPaper Class="mud-theme-primary pa-1 mb-2 ma-1 rounded-t-xl" Width="360px">
        <!-- Header -->
        <MudPaper Class="mud-theme-primary px-2 mt-n1 mx-n1 mb-n1 d-flex flex-nowrap flex-grow-1 rounded-t-xl" Square="true">
            <MudText class="pl-2 pt-1 d-inline-flex flex-grow-1">@Date</MudText>
            <MudIconButton Class="d-inline-flex pr-1" Size="Size.Small" Icon="@Icons.Material.Filled.Settings"
                OnClick="@EditPatient"/>
        </MudPaper>
        <MudPaper Class="mud-theme-primary ma-n1 pl-1" Square="true" Elevation="0">
            <MudText><b>Name:</b> @Name</MudText>
            <MudText><b>Patient ID:</b> @Id</MudText>
        </MudPaper>

        @foreach (var group in Patient.TaskGroups) {
            <!-- Task Group -->
            <MudPaper Class="mud-theme-tertiary pa-1 mt-2" Width="100%">
                <MudText>@group.Label</MudText>
                @foreach (var result in group.Tasks) {
                    <PatientTask TaskItem="@result" />
                }
            </MudPaper>
        }
    </MudPaper>
}

@code {
    [Parameter]
    public Patient? Patient { get; set; }
    string Name => Patient.LastName + ", " + Patient.FirstName;
    string Id => Patient.Id;
    string Date => $" {Patient.StartDate.Value.Year} {months[Patient.StartDate.Value.Month]} {Patient.StartDate.Value.Day.ToString("00")}";
    int status => (int)Patient.Status;
    string[] months = new string[] { "N/A", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sept", "Oct", "Nov", "Dec"};
    string[] labels = new string[] { "Newly Added", "Assigned", "Treatment Ready", "In Treatment", "Treatment Complete", "Retired" };

    private async Task UpdatePatientTask(string groupLabel, string label, object value){
        int groupIndex = Patient.TaskGroups.FindIndex(g => g.Label == groupLabel);
        int index = Patient.TaskGroups[groupIndex].Tasks.FindIndex(t => t.Label == label);
        if (index >= 0) {
            Patient.TaskGroups[groupIndex].Tasks[index].SetValue(value);
            patientService.UpdatePatient(Patient);
        }
    }

    private void EditPatient(){
        navigationManager.NavigateTo($"patient/{Patient.Id}");
    }
}
